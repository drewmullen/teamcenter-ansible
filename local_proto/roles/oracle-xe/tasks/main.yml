---
#
# Setup
#

- set_fact:
    oracle_xe_version: 11.2.0
    install_archive: "oracle-xe-11.2.0-1.0.x86_64.rpm.zip"
    oracle_xe_archive_url: http://cingetplm099pc.cloud.ge.com:3000/ansible/dbserver/11.2.0
    #/oracle-xe-11.2.0-1.0.x86_64.rpm.zip

- name: temporary directory for install
  register: mktemp
  command: mktemp -d

- name: download installation archive
  get_url:
    mode: 0755
  args:
    url: "{{ oracle_xe_archive_url }}/{{ install_archive }}"
    dest: "/app/{{ install_archive }}"
  when: oracle_xe_archive_url is defined

  #dest: "{{ playbook_dir }}/{{ install_archive }}"

- name: ensure packages required are installed
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - libaio
    - bc
    - flex
    - unzip

#
# Oracle XE
#

- name: unzip oracle rpm
  unarchive:
    src: "/app/{{ install_archive }}"
    dest: "{{ mktemp.stdout }}"
    creates: "{{ mktemp.stdout }}/oracle-xe-11.2.0-1.0.x86_64.rpm"

- name: create swap so oracle installer doesn't complain
  shell: "dd if=/dev/zero of=/{{ mktemp.stdout }}/swapfile bs=2048 count=2097152; mkswap /{{ mktemp.stdout }}/swapfile; swapon /{{ mktemp.stdout }}/swapfile; swapon -a"
  when: ansible_swaptotal_mb <= 2048

# Install via. RPM. Creates oracle user and dba group if it doesn't already exist
- name: install oracle
  yum:
    name: "{{ mktemp.stdout }}/Disk1/oracle-xe-11.2.0-1.0.x86_64.rpm"
    state: present

- name: generate response file
  template:
    src: "xe.rsp.j2"
    dest: "{{ mktemp.stdout }}/xe.rsp"

- name: make sure oracle is running
  service:
    name: oracle-xe
    state: started

- name: configure oracle
  shell: "/etc/init.d/oracle-xe configure responseFile={{ mktemp.stdout }}/xe.rsp"
  ignore_errors: True

- name: Adding the oracle paths to /etc/profile
  lineinfile:
    dest: /etc/profile
    line: "{{ item.line }}"
    insertafter: 'EOF'
  with_items:
    - { line: 'export ORACLE_HOME=/u01/app/oracle/product/{{ oracle_xe_version }}/xe' }
    - { line: 'export ORACLE_SID=XE' }
    - { line: 'export PATH=$PATH:/u01/app/oracle/product/{{ oracle_xe_version }}/xe/bin' }

- name: set oracle listener
  shell: "echo 'EXEC DBMS_XDB.SETLISTENERLOCALACCESS(FALSE);' | ORACLE_HOME=/u01/app/oracle/product/{{ oracle_xe_version }}/xe /u01/app/oracle/product/{{ oracle_xe_version }}/xe/bin/sqlplus system/{{ oracle_password }}@localhost"

#
# Cleanup
#

- name: remove temporary swap
  shell: "swapoff /{{ mktemp.stdout }}/swapfile"
  ignore_errors: True

#- name: clean up temporary directory
#  file:
#    state=absent
#    path="{{ mktemp.stdout }}"
